import type { ApplicationService } from '@adonisjs/core/types';
import type { RedisService } from '../src/types.js';
declare module '@adonisjs/core/types' {
    interface ContainerBindings {
        redis: RedisService;
    }
}
/**
 * Registering the Redis manager as a singleton to the container
 * and defining REPL bindings
 */
export default class RedisProvider {
    protected app: ApplicationService;
    constructor(app: ApplicationService);
    /**
     * Define repl bindings
     */
    protected defineReplBindings(): Promise<void>;
    /**
     * Register the Redis manager as a singleton with the
     * container
     */
    register(): void;
    /**
     * Defining repl bindings on boot
     */
    boot(): Promise<void>;
    /**
     * Gracefully shutdown connections when app goes down
     */
    shutdown(): Promise<void>;
}
