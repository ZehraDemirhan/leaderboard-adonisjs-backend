{"version":3,"sources":["../../factories/redis_manager.ts"],"sourcesContent":["/*\n * @adonisjs/redis\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport RedisManager from '../src/redis_manager.js'\nimport { LoggerFactory } from '@adonisjs/core/factories/logger'\nimport type { RedisClusterConnectionConfig, RedisConnectionConfig } from '../src/types.js'\n\n/**\n * Redis manager factory is used to create an instance of the redis\n * manager for testing\n */\nexport class RedisManagerFactory<\n  ConnectionsList extends Record<string, RedisClusterConnectionConfig | RedisConnectionConfig>,\n> {\n  #config: {\n    connection: keyof ConnectionsList\n    connections: ConnectionsList\n  }\n\n  logs: string[] = []\n\n  constructor(config: { connection: keyof ConnectionsList; connections: ConnectionsList }) {\n    this.#config = config\n  }\n\n  /**\n   * Create an instance of the redis manager\n   */\n  create() {\n    return new RedisManager(\n      this.#config,\n      new LoggerFactory()\n        .merge({\n          enabled: true,\n        })\n        .pushLogsTo(this.logs)\n        .create()\n    )\n  }\n}\n"],"mappings":";;;;;;AAUA,SAAS,qBAAqB;AAOvB,IAAM,sBAAN,MAEL;AAAA,EACA;AAAA,EAKA,OAAiB,CAAC;AAAA,EAElB,YAAY,QAA6E;AACvF,SAAK,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,WAAO,IAAI;AAAA,MACT,KAAK;AAAA,MACL,IAAI,cAAc,EACf,MAAM;AAAA,QACL,SAAS;AAAA,MACX,CAAC,EACA,WAAW,KAAK,IAAI,EACpB,OAAO;AAAA,IACZ;AAAA,EACF;AACF;","names":[]}