import { BaseCheck } from '@adonisjs/core/health';
import type { HealthCheckResult } from '@adonisjs/core/types/health';
import type { Connection } from '../types.js';
/**
 * The RedisMemoryUsageCheck can be used to monitor the memory
 * consumption of a redis server and report a warning or error
 * after a certain threshold has been execeeded.
 */
export declare class RedisMemoryUsageCheck extends BaseCheck {
    #private;
    /**
     * Health check public name
     */
    name: string;
    constructor(connection: Connection);
    /**
     * Define the memory threshold after which a warning
     * should be created.
     *
     * - The value should be either a number in bytes
     * - Or it should be a value expression in string.
     *
     * ```
     * .warnWhenExceeds('200 mb')
     * ```
     */
    warnWhenExceeds(value: string | number): this;
    /**
     * Define the memory threshold after which an error
     * should be created.
     *
     * - The value should be either a number in bytes
     * - Or it should be a value expression in string.
     *
     * ```
     * .warnWhenExceeds('200 mb')
     * ```
     */
    failWhenExceeds(value: string | number): this;
    /**
     * Define a custom callback to compute Redis memory usage. The
     * return value must be a human readable string
     */
    compute(callback: (connection: Connection) => Promise<number | null>): this;
    /**
     * Executes the health check
     */
    run(): Promise<HealthCheckResult>;
}
